//This Java source file was generated by the Gradle 'init' task.

package model;

import static org.junit.jupiter.api.Assertions.assertEquals;
import org.json.JSONException;
import org.json.JSONObject;
import org.junit.jupiter.api.Test;

public class AluguelTest {
	Double valor = 690.00;
	int dia;

    @Test public void testNominalRACP1() throws JSONException {
        Aluguel alug = new Aluguel();      

        for (int dia = 0; dia <= 2; dia++) {
        	Double testNominalRACP1 = valor-(valor*0.10);
            JSONObject result = alug.inputAluguelDia(valor,dia);
            assertEquals(testNominalRACP1, result.getDouble("valor_calculado"), 0.01);           
        }  
    }
       
    @Test public void testNominalRACP2() throws JSONException {
        Aluguel alug = new Aluguel();
        
        for (int dia = 4; dia <= 6; dia++) {    	
        	if (dia == 4 || dia == 5) {
        		Double testNominalRACP2 = valor-(valor*0.10);
                JSONObject result = alug.inputAluguelDia(valor,dia);
                assertEquals(testNominalRACP2, result.getDouble("valor_calculado"), 0.01);
        	} else if (dia == 6) {
        		Double testNominalRACP2 = valor-(valor*0.05);
                JSONObject result = alug.inputAluguelDia(valor,dia);
                assertEquals(testNominalRACP2, result.getDouble("valor_calculado"), 0.01);
        	}        	
        }             
    }
    
    @Test public void testNominalRACP3() throws JSONException {
        Aluguel alug = new Aluguel();

        for (int dia = 9; dia <= 11; dia++) {        	
        	if (dia == 9 ) {
        		Double testNominalRACP3 = valor-35.5;
                JSONObject result = alug.inputAluguelDia(valor,dia);                
        		assertEquals(testNominalRACP3, result.getDouble("valor_calculado"), 0.01);   
        	} else if (dia == 10 ) {
        		Double testNominalRACP3 = valor-(valor*0.05);
        		JSONObject result = alug.inputAluguelDia(valor,dia);        		
        		assertEquals(testNominalRACP3, result.getDouble("valor_calculado"), 0.01);
        	} else if (dia == 11) {
        		Double testNominalRACP3 = valor;
        		JSONObject result = alug.inputAluguelDia(valor,dia);
        		assertEquals(testNominalRACP3, result.getDouble("valor_calculado"), 0.01);
        	}  
        }
    }
    
    @Test public void testNominalRACP4() throws JSONException {
        Aluguel alug = new Aluguel();
        
        for (int dia = 14; dia <= 16; dia++) {
        	if (dia == 16) {      	
            	Double testNominalRACP4 = valor+(valor*0.021);
    	    	JSONObject result = alug.inputAluguelDia(valor,dia);
    	        assertEquals(testNominalRACP4, result.getDouble("valor_calculado"),0.01);
    	     } else if (dia == 15) {
    	     	Double testNominalRACP4 = valor-(valor*0.10);
    	     	JSONObject result = alug.inputAluguelDia(valor,dia);
    	        assertEquals(testNominalRACP4, result.getDouble("valor_calculado"),0.01);
    	     } else if (dia == 14) {
    	     	Double testNominalRACP4 = valor;
    	     	JSONObject result = alug.inputAluguelDia(valor,dia);
    	        assertEquals(testNominalRACP4, result.getDouble("valor_calculado"),0.01);
    	     }
        }
    } 
    
    @Test public void testNominalRACP5() throws JSONException {
    	Aluguel alug = new Aluguel();
    	
    	for (int dia = 29; dia <= 31; dia++) {
    		if (dia == 29) {
    			Double testNominalRACP5 = valor+(valor*0.034);
    	    	JSONObject result = alug.inputAluguelDia(valor,dia);
    	        assertEquals(testNominalRACP5, result.getDouble("valor_calculado"),0.01);
    		} else if (dia == 30) {
    			Double testNominalRACP5 = valor+(valor*0.035);
    	    	JSONObject result = alug.inputAluguelDia(valor,dia);
    	        assertEquals(testNominalRACP5, result.getDouble("valor_calculado"),0.01);
    		} else if (dia <= 31) {
    			int testNominalRACP5 = -1;
    	    	JSONObject result = alug.inputAluguelDia(valor,dia);
    	        assertEquals(testNominalRACP5, result.getDouble("valor_calculado"),0.01);
    		}
    	}
    }
}